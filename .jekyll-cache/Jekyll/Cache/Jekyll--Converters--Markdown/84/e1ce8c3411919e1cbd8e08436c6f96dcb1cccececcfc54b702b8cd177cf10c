I"ƒ¢<h2 id="summary">Summary</h2>
<p>In this report I hoped to create a guide for young professionals who are interested in relocating to Los Angeles but are unsure of which neighborhood to live in. To accomplish this, I scraped data from several sources, namely</p>

<!--more-->

<ol>
  <li>Rental price data from the American Community Survey</li>
  <li>Historical crime data (2014-2018) from LAPD</li>
  <li>Neighborhood venues data from Foursquare</li>
  <li>List of LA neighborhoods from LA Times</li>
</ol>

<p>I started off by performing basic exploratory data analysis to understand various characteristics of the neighborhoods. I then used K-means clustering to group the neighborhoods into 10 categories based on venue categories, city population, median rental prices, and safety ranking  (tabulated as the average reported crimes per capita). The clustering results show areas in the City of Los Angeles with clearly defined boundaries. Not surprisingly, the high income, high safety ranking areas reside near the coast in west LA, whereas the low income, low safety ranking areas locate mostly in downtown, central, and southeast LA. My conclusion upon completing this machine learning project is that I would recommend young professionals to relocate to cities in west LA, in areas north of the LAX. Despite its above average rent, the area offers safe neighborhoods with lots of good coffee shops and restaurants to dine at. Conversely, I would not recommend living near downtown LA or its surrounding areas, due to high crime rates, despite its below average rent.</p>

<h2 id="table-of-contents">Table of contents</h2>
<ol>
  <li><a href="#intro">Introduction</a><br />
 1.1 <a href="#question">Question of interest</a><br />
 1.2 <a href="#interest">Who may find this report interesting?</a></li>
  <li><a href="#data_intro">Data sources</a><br />
 2.1 <a href="#data_data">Data.org</a><br />
 2.2 <a href="#zillow_data">Zillow</a><br />
 2.3 <a href="#foursquare_data">Foursquare API</a></li>
  <li><a href="#method">Methodology</a><br />
 3.1 <a href="#explore">Exploratory data analysis</a>: <a href="#location_explore">Location</a>, <a href="#housing_explore">housing</a>, <a href="#crime_explore">crime</a><br />
 3.2 <a href="#combine">Combine data</a><br />
 3.3 <a href="#kmeans">K-means clustering</a></li>
  <li><a href="#results">Results</a></li>
  <li><a href="#discussion">Discussion</a></li>
  <li><a href="#conclusion">Conclusion</a></li>
</ol>

<p><a id="intro"></a></p>
<h2 id="1-introduction">1. Introduction</h2>
<p>(where you discuss the business problem and who would be interested in this project)</p>

<p>Whether youâ€™re a seasoned Angelino, a recent transplant from somewhere else, or even just someone who is contemplating moving to the city of Angels, the task of searching for a young, fun and affordable neighborhood to live in Los Angeles can be very daunting. With 16 counties and 200+ neighborhoods in LA, how do you even begin to find out which neighborhood fits your personality and lifestyle the best? If you are on a budget, how do you know which neighborhood offers the most affordable housing without compromising safety? There are so many questions that can be asked, so in order to help you better understand the different neighborhoods and make an informed choice, in this final capstone project I will leverage power of data to separate LA neighborhoods into different categories. In doing so I hope to help you find your dream neighborhood to live in LA.</p>

<p><a id="question"></a></p>
<h3 id="11-question-of-interest">1.1 Question of interest</h3>
<p>The main question I would like to ask is this: For those young professionals starting off in the working world, where are some neighborhoods in LA is most suitable for young people to live in? When I imagine a suitable neighborhood for young people, I can think of 3 main criteria that will be important to consider:</p>

<ol>
  <li><strong>Rental price</strong>: The rent must be affordable. If most of your hard-earned money goes to rent, then little disposable income will be left for all the other fun stuff. The general rule-of-thumb for rent is ~30% of take home pay per month.</li>
  <li><strong>Safety</strong>: Nobody wants to live somewhere that, although very affordable, has implicit curfews at night because the neighborhood isnâ€™t safe. On the other hand, maybe itâ€™s not necessary to live in an expensive gated community with 24-hour security while having to shell out most of your paycheck just so you feel safe.</li>
  <li><strong>Entertainment</strong>: What do young and restless minds do when they are not working? They are enjoying life! An ideal neighborhood should provide a vast array of entertainment options that is affordable and diverse.</li>
</ol>

<p>Just like with anything in life, there is no 100% perfect choice for everything we do; however, when we strike a balance between what we think is important, then usually the optimal choice will emerge. In the case of finding an ideal neighborhood to live in, I believe safety, housing prices, and entertainment options are three critical criteria that a good neighborhood should have a good balance in. With that in mind, letâ€™s move onto the data requirements!</p>

<p><a id="interest"></a></p>
<h3 id="12-who-may-find-this-report-interesting">1.2 Who may find this report interesting?</h3>
<p>This report will be interesting to those who are currently living in Los Angeles and are looking to relocate to another neighborhood, or expected LA transplants who are making decisions on where to settle in once they relocate.</p>

<p><a id="data_intro"></a></p>
<h2 id="2-data--sources">2. Data  sources</h2>
<p>(Where you describe the data that will be used to solve the problem and the source of the data)</p>

<p>For this study, I used data from the following sources:</p>
<ol>
  <li>LA Crime Data from 2010 to Present (Source: <a href="https://catalog.data.gov/dataset?organization=city-of-los-angeles">LA Open Data</a>)</li>
  <li>America Community Survey median rental prices (Source: <a href="https://factfinder.census.gov/faces/nav/jsf/pages/community_facts.xhtml">US Census Bureau</a>)</li>
  <li>Location and venue information (Source: <a href="https://developer.foursquare.com/docs/api/endpoints">Foursquare</a>)</li>
</ol>

<p><a id="data_data"></a></p>
<h3 id="21-la-crime-data">2.1 LA Crime Data</h3>
<p>LA Open Data provides <a href="https://catalog.data.gov/dataset/crime-data-from-2010-to-present">Crime Data from 2010 to Present</a> in Los Angeles. Hereâ€™s the description:</p>
<blockquote>
  <p>This dataset reflects incidents of crime in the City of Los Angeles dating back to 2010. This data is transcribed from original crime reports that are typed on paper and therefore there may be some inaccuracies within the data. Some location fields with missing data are noted as (0Â°, 0Â°). Address fields are only provided to the nearest hundred block in order to maintain privacy. This data is as accurate as the data in the database. Please note questions or concerns in the comments.</p>
</blockquote>

<p>The dataset contains the following features:</p>
<blockquote>
  <p>Index([â€˜DR Numberâ€™, â€˜Date Reportedâ€™, â€˜Date Occurredâ€™, â€˜Time Occurredâ€™,
       â€˜Area IDâ€™, â€˜Area Nameâ€™, â€˜Reporting Districtâ€™, â€˜Crime Codeâ€™,
       â€˜Crime Code Descriptionâ€™, â€˜MO Codesâ€™, â€˜Victim Ageâ€™, â€˜Victim Sexâ€™,
       â€˜Victim Descentâ€™, â€˜Premise Codeâ€™, â€˜Premise Descriptionâ€™,
       â€˜Weapon Used Codeâ€™, â€˜Weapon Descriptionâ€™, â€˜Status Codeâ€™,
       â€˜Status Descriptionâ€™, â€˜Crime Code 1â€™, â€˜Crime Code 2â€™, â€˜Crime Code 3â€™,
       â€˜Crime Code 4â€™, â€˜Addressâ€™, â€˜Cross Streetâ€™, â€˜Location â€˜],
      dtype=â€™objectâ€™)</p>
</blockquote>

<p>See the <a href="https://data.lacity.org/d/y8tr-7khq">LA City landing page</a> for descriptions of the features in the dataset.</p>

<p><a id="zillow_data"></a></p>
<h3 id="22-median-rental-prices">2.2 Median rental prices</h3>
<p>I used the rental price data from USCâ€™s <a href="https://usc.data.socrata.com/Los-Angeles/Rent-Price-LA-/4a97-v5tx">Neighborhood Data for Social Change</a> (NDSC) platform. The data description is below.</p>
<blockquote>
  <p>Gross rent provides information on the monthly housing cost expenses for individual renters. Gross rent is the contract rent plus the estimated average monthly cost of utilities (electricity, gas, and water and sewer) and fuels (oil, coal, kerosene, wood, etc.) if these are paid by the renter (or paid for the renter by someone else). Gross rent is intended to eliminate differentials that result from varying practices with respect to the inclusion of utilities and fuels as part of the rental payment. The estimated costs of water and sewer, and fuels are reported on a 12-month basis but are converted to monthly figures for the tabulations.</p>
</blockquote>

<p>Data source is America Community Survey (ACS). According to Wikipedia:</p>

<blockquote>
  <p>The American Community Survey (ACS) is an ongoing survey by the U.S. Census Bureau. It regularly gathers information previously contained only in the long form of the decennial census, such as ancestry, educational attainment, income, language proficiency, migration, disability, employment, and housing characteristics. These data are used by many public-sector, private-sector, and not-for-profit stakeholders to allocate funding, track shifting demographics, plan for emergencies, and learn about local communities. Sent to approximately 295,000 addresses monthly (or 3.5 million per year), it is the largest household survey that the Census Bureau administers.</p>
</blockquote>

<p><a id="foursquare_data"></a></p>
<h3 id="23-location-and-venue-data">2.3 Location and venue data</h3>
<p>To get venue information from LA neighborhoods, I used Foursquare API, which provides regular endpoints for fetching these information:</p>

<ul>
  <li>Price</li>
  <li>Like count</li>
  <li>Rating</li>
  <li>Category</li>
  <li>Postal code</li>
</ul>

<p>This can be used to qualitatively evaluate the characteristics of each neighborhood, and can be used in clustering to group similar neighborhoods.</p>

<p><a id="method"></a></p>
<h2 id="3-methodology">3. Methodology</h2>
<p>(The main component of the report where you discuss and describe any exploratory data analysis that you did, any inferential statistical testing that you performed, and what machine learnings were used and why)</p>

<p><a id="explore"></a></p>
<h3 id="31-exploratory-data-analysis">3.1 Exploratory Data analysis</h3>

<h4 id="311-download-la-crime-dataset-neighborhood-and-population-data">3.1.1 Download LA crime dataset, neighborhood, and population data</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Download LA crime data
# !wget -O 'crime_data.csv' 'https://data.lacity.org/api/views/y8tr-7khq/rows.csv?accessType=DOWNLOAD' # uncomment if file hasn't been downloaded before
# print('LA crime data downloaded!')
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># import required libraries
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pprint</span>
<span class="kn">from</span> <span class="nn">pandas.io.json</span> <span class="kn">import</span> <span class="n">json_normalize</span>
<span class="c1"># !conda install -q -c conda-forge geopy --yes # uncomment if library not installed
</span><span class="kn">from</span> <span class="nn">geopy.geocoders</span> <span class="kn">import</span> <span class="n">Nominatim</span> <span class="c1"># module to convert an address into latitude and longitude values
# !conda install -q -c conda-forge folium=0.5.0 --yes # uncomment if library not installed
</span><span class="kn">import</span> <span class="nn">folium</span>
<span class="c1"># !pip install -q python-zillow # uncomment if library not installed
# import zillow
# !pip install -q shapely # uncomment if library not installed
</span><span class="kn">from</span> <span class="nn">shapely.geometry</span> <span class="kn">import</span> <span class="n">shape</span><span class="p">,</span> <span class="n">Point</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">cm</span>
<span class="kn">import</span> <span class="nn">matplotlib.colors</span>

<span class="k">print</span><span class="p">(</span><span class="s">'Libraries loaded'</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Libraries loaded
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># set up credentials
# FOURSQUARE API credentials
</span><span class="n">CLIENT_ID</span> <span class="o">=</span> <span class="s">''</span> <span class="c1"># your Foursquare ID
</span><span class="n">CLIENT_SECRET</span> <span class="o">=</span> <span class="s">''</span> <span class="c1"># your Foursquare Secret
</span><span class="n">VERSION</span> <span class="o">=</span> <span class="s">'20180604'</span>
<span class="n">LIMIT</span> <span class="o">=</span> <span class="mi">30</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># scrap LA neighborhood list from LA Times's website.
</span><span class="n">url</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">'http://maps.latimes.com/neighborhoods/population/total/neighborhood/list/'</span><span class="p">)</span><span class="o">.</span><span class="n">text</span>
<span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="s">'lxml'</span><span class="p">)</span>

<span class="c1"># print(soup.prettify())
</span>
<span class="c1"># extract the list of cities from LA
</span><span class="n">my_table</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">'table'</span><span class="p">,</span> <span class="p">{</span><span class="s">'class'</span><span class="p">:</span> <span class="s">'datagrid'</span><span class="p">})</span> <span class="c1"># returns a bs4 object
</span><span class="n">neighborhoods</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">populations</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">my_table</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'a'</span><span class="p">,</span> <span class="n">href</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
    <span class="n">neighborhoods</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">row</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
    
<span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">my_table</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'td'</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
    <span class="n">populations</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">row</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
<span class="n">populations</span> <span class="o">=</span> <span class="n">populations</span><span class="p">[</span><span class="mi">1</span><span class="p">::</span><span class="mi">2</span><span class="p">]</span> <span class="c1"># skip rankings
</span>
<span class="n">neigh_pop_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s">'Neighborhood'</span><span class="p">:</span><span class="n">neighborhoods</span><span class="p">,</span> <span class="s">'Population'</span><span class="p">:</span><span class="n">populations</span><span class="p">})</span>

<span class="c1"># clean up neighborhood names and remove ones that don't return coordinates 
</span><span class="n">drop_neighborhoods</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Unincorporated Santa Monica Mountains'</span><span class="p">,</span> 
                      <span class="s">'Castaic Canyons'</span><span class="p">,</span> 
                      <span class="s">'Tujunga Canyons'</span><span class="p">,</span>
                     <span class="s">'Unincorporated Santa Susana Mountains'</span><span class="p">,</span>
                     <span class="s">'Unincorporated Catalina Island'</span><span class="p">]</span>
<span class="n">neigh_pop_df</span> <span class="o">=</span> <span class="n">neigh_pop_df</span><span class="p">[</span><span class="o">~</span><span class="n">neigh_pop_df</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">(</span><span class="n">drop_neighborhoods</span><span class="p">)]</span>
<span class="n">neigh_pop_df</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]</span> <span class="o">=</span> <span class="n">neigh_pop_df</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">'/'</span><span class="p">)</span><span class="o">.</span><span class="nb">str</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)</span><span class="o">.</span><span class="nb">str</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">'e-L'</span><span class="p">)</span><span class="o">.</span><span class="nb">str</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">neigh_pop_df</span> <span class="o">=</span> <span class="n">neigh_pop_df</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'Neighborhood'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">neigh_pop_df</span><span class="p">[</span><span class="s">'Population'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_numeric</span><span class="p">(</span><span class="n">neigh_pop_df</span><span class="p">[</span><span class="s">'Population'</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span> <span class="s">''</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="n">neigh_pop_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">neigh_pop_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
<span class="c1"># neigh_pop_df.shape
# neigh_pop_df.info()
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(260, 2)
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: middle;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Neighborhood</th>
      <th>Population</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>46</th>
      <td>Woodland Hills</td>
      <td>59661</td>
    </tr>
    <tr>
      <th>68</th>
      <td>Winnetka</td>
      <td>46943</td>
    </tr>
    <tr>
      <th>225</th>
      <td>Windsor Square</td>
      <td>5642</td>
    </tr>
    <tr>
      <th>61</th>
      <td>Wilmington</td>
      <td>51517</td>
    </tr>
    <tr>
      <th>102</th>
      <td>Willowbrook</td>
      <td>34336</td>
    </tr>
  </tbody>
</table>
</div>

<p><a id="location_explore"></a></p>
<h4 id="312-location-data-from-foursquare">3.1.2 Location data from Foursquare</h4>
<p>Next, fetch and clean LA venue information from Foursquare.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># define function to get venue information based on latitude and longitude
</span><span class="k">def</span> <span class="nf">getCityVenues</span><span class="p">(</span><span class="n">names</span><span class="p">,</span> <span class="n">radius</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span> <span class="n">limit</span><span class="o">=</span><span class="mi">100</span><span class="p">):</span>
    <span class="n">venues_list</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">c</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">names</span><span class="p">:</span>
        <span class="c1"># get latitude and longitudes of the city
</span>        <span class="n">address</span> <span class="o">=</span> <span class="n">name</span> <span class="o">+</span> <span class="s">', CA'</span>
<span class="c1">#         if c 
</span>        <span class="k">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="o">+</span> <span class="s">': '</span> <span class="o">+</span> <span class="n">address</span><span class="p">)</span>
        <span class="n">geolocator</span> <span class="o">=</span> <span class="n">Nominatim</span><span class="p">(</span><span class="n">user_agent</span><span class="o">=</span><span class="s">"la_explorer"</span><span class="p">,</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
        <span class="n">location</span> <span class="o">=</span> <span class="n">geolocator</span><span class="o">.</span><span class="n">geocode</span><span class="p">(</span><span class="n">address</span><span class="p">)</span>
        <span class="n">latitude</span> <span class="o">=</span> <span class="n">location</span><span class="o">.</span><span class="n">latitude</span>
        <span class="n">longitude</span> <span class="o">=</span> <span class="n">location</span><span class="o">.</span><span class="n">longitude</span>

        <span class="c1"># make the API call
</span>        <span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.foursquare.com/v2/venues/explore?client_id={}&amp;client_secret={}&amp;v={}&amp;ll={},{}&amp;radius={}&amp;limit={}'</span><span class="o">.</span><span class="nb">format</span><span class="p">(</span>
            <span class="n">CLIENT_ID</span><span class="p">,</span> 
            <span class="n">CLIENT_SECRET</span><span class="p">,</span> 
            <span class="n">VERSION</span><span class="p">,</span> 
            <span class="n">latitude</span><span class="p">,</span> 
            <span class="n">longitude</span><span class="p">,</span> 
            <span class="n">radius</span><span class="p">,</span>
            <span class="n">limit</span><span class="p">)</span>
        <span class="n">results</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="o">.</span><span class="n">json</span><span class="p">()[</span><span class="s">"response"</span><span class="p">][</span><span class="s">'groups'</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">'items'</span><span class="p">]</span>
        
        <span class="c1"># add venue name, location, category, and city
</span>        <span class="n">venues_list</span><span class="o">.</span><span class="n">append</span><span class="p">([(</span>
            <span class="n">name</span><span class="p">,</span>
            <span class="n">latitude</span><span class="p">,</span>
            <span class="n">longitude</span><span class="p">,</span>
            <span class="n">v</span><span class="p">[</span><span class="s">'venue'</span><span class="p">][</span><span class="s">'name'</span><span class="p">],</span>
            <span class="n">v</span><span class="p">[</span><span class="s">'venue'</span><span class="p">][</span><span class="s">'location'</span><span class="p">][</span><span class="s">'lat'</span><span class="p">],</span>
            <span class="n">v</span><span class="p">[</span><span class="s">'venue'</span><span class="p">][</span><span class="s">'location'</span><span class="p">][</span><span class="s">'lng'</span><span class="p">],</span>
            <span class="n">v</span><span class="p">[</span><span class="s">'venue'</span><span class="p">][</span><span class="s">'categories'</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">'name'</span><span class="p">])</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">results</span><span class="p">])</span>
        
        <span class="n">c</span> <span class="o">+=</span> <span class="mi">1</span>

    <span class="n">la_venues</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">([</span><span class="n">item</span> <span class="k">for</span> <span class="n">venue_list</span> <span class="ow">in</span> <span class="n">venues_list</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">venue_list</span><span class="p">])</span>
    <span class="n">la_venues</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'City'</span><span class="p">,</span>
                        <span class="s">'City latitude'</span><span class="p">,</span> 
                        <span class="s">'City longitude'</span><span class="p">,</span>
                        <span class="s">'Venue'</span><span class="p">,</span>
                        <span class="s">'Venue latitude'</span><span class="p">,</span>
                        <span class="s">'Venue longitude'</span><span class="p">,</span>
                        <span class="s">'Venue category'</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">la_venues</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># get venue information for all neighborhoods
# venues_df = getCityVenues(names=neigh_pop_df['Neighborhood']) # takes a few minutes
# print('Venue information done')
# venues_df.to_pickle('venues.pkl')
</span>
<span class="c1"># load from saved pickle
</span><span class="n">venues_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_pickle</span><span class="p">(</span><span class="s">'venues.pkl'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'Venue information loaded'</span><span class="p">)</span>

<span class="c1"># check the dataframe
</span><span class="k">print</span><span class="p">(</span><span class="n">venues_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">venues_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Venue information loaded
(8335, 7)
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: center;">
      <th></th>
      <th>City</th>
      <th>City latitude</th>
      <th>City longitude</th>
      <th>Venue</th>
      <th>Venue latitude</th>
      <th>Venue longitude</th>
      <th>Venue category</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Winnetka</td>
      <td>34.201262</td>
      <td>-118.571087</td>
      <td>Collector's Paradise</td>
      <td>34.200163</td>
      <td>-118.571371</td>
      <td>Hobby Shop</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Winnetka</td>
      <td>34.201262</td>
      <td>-118.571087</td>
      <td>Starbucks</td>
      <td>34.200803</td>
      <td>-118.570514</td>
      <td>Coffee Shop</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Winnetka</td>
      <td>34.201262</td>
      <td>-118.571087</td>
      <td>Johnny Pacific</td>
      <td>34.208097</td>
      <td>-118.570644</td>
      <td>Latin American Restaurant</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Winnetka</td>
      <td>34.201262</td>
      <td>-118.571087</td>
      <td>Crazy Harry's Bar</td>
      <td>34.208189</td>
      <td>-118.571561</td>
      <td>Bar</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Winnetka</td>
      <td>34.201262</td>
      <td>-118.571087</td>
      <td>Guido's Pizza &amp; Pasta</td>
      <td>34.202035</td>
      <td>-118.571647</td>
      <td>Pizza Place</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># check the # of venues returned for each city
</span><span class="n">venues_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'City'</span><span class="p">)</span><span class="o">.</span><span class="n">count</span><span class="p">();</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># clean up data
# one hot encoding
</span><span class="n">la_venue_onehot</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">venues_df</span><span class="p">[[</span><span class="s">'Venue category'</span><span class="p">]],</span> <span class="n">prefix</span><span class="o">=</span><span class="s">""</span><span class="p">,</span> <span class="n">prefix_sep</span><span class="o">=</span><span class="s">""</span><span class="p">)</span>

<span class="c1"># add neighborhood column back to dataframe
</span><span class="n">la_venue_onehot</span><span class="p">[</span><span class="s">'City'</span><span class="p">]</span> <span class="o">=</span> <span class="n">venues_df</span><span class="p">[</span><span class="s">'City'</span><span class="p">]</span> 

<span class="c1"># move neighborhood column to the first column
</span><span class="n">city_idx</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">la_venue_onehot</span><span class="o">.</span><span class="n">columns</span> <span class="o">==</span> <span class="s">'City'</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span>
<span class="n">other_idx</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">la_venue_onehot</span><span class="o">.</span><span class="n">columns</span> <span class="o">!=</span> <span class="s">'City'</span><span class="p">)</span>
<span class="n">fixed_columns</span> <span class="o">=</span> <span class="p">[</span><span class="n">la_venue_onehot</span><span class="o">.</span><span class="n">columns</span><span class="p">[</span><span class="n">city_idx</span><span class="p">]]</span> <span class="o">+</span> <span class="nb">list</span><span class="p">(</span><span class="n">la_venue_onehot</span><span class="o">.</span><span class="n">columns</span><span class="p">[</span><span class="n">other_idx</span><span class="p">])</span>
<span class="n">la_venue_onehot</span> <span class="o">=</span> <span class="n">la_venue_onehot</span><span class="p">[</span><span class="n">fixed_columns</span><span class="p">]</span>

<span class="c1"># group venues by city and calculate frequency of occurrence
</span><span class="n">la_venue_onehot_grouped</span> <span class="o">=</span> <span class="n">la_venue_onehot</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'City'</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">la_venue_onehot_grouped</span>

<span class="c1"># fixed_columns
# la_venue_onehot.columns[:100]
</span><span class="k">print</span><span class="p">(</span><span class="n">la_venue_onehot_grouped</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">la_venue_onehot_grouped</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(232, 434)
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>City</th>
      <th>ATM</th>
      <th>Accessories Store</th>
      <th>Adult Boutique</th>
      <th>Advertising Agency</th>
      <th>African Restaurant</th>
      <th>Airport</th>
      <th>Airport Service</th>
      <th>Airport Terminal</th>
      <th>Alternative Healer</th>
      <th>...</th>
      <th>Warehouse Store</th>
      <th>Water Park</th>
      <th>Waterfront</th>
      <th>Whisky Bar</th>
      <th>Wine Bar</th>
      <th>Wine Shop</th>
      <th>Wings Joint</th>
      <th>Women's Store</th>
      <th>Yoga Studio</th>
      <th>Zoo</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Acton</td>
      <td>0.00000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.00000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Adams-Normandie</td>
      <td>0.02439</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.02439</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Agoura Hills</td>
      <td>0.00000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.00000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Agua Dulce</td>
      <td>0.00000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.00000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Alhambra</td>
      <td>0.00000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.00000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.014085</td>
      <td>0.0</td>
      <td>0.028169</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
  </tbody>
</table>
<p>5 rows Ã— 434 columns</p>
</div>

<p><a id="housing_explore"></a></p>
<h4 id="313-rental-price-data">3.1.3 Rental price data</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># uncomment if file hasn't been downloaded before
# !wget -q -O 'la_rental_prices.csv' 'https://usc.data.socrata.com/api/views/4a97-v5tx/rows.csv?accessType=DOWNLOAD'
# print('LA rental prices data downloaded!')
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Clean up rental price data
</span><span class="n">prices_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'la_rental_prices.csv'</span><span class="p">)</span>
<span class="n">prices_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
<span class="c1"># prices_df.drop(['Policy Area', 'Dataset', 'Variable', 'Tract', 'GEOID', 'Row ID', 'Date'], axis=1, inplace=True)
</span><span class="n">prices_df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Policy Area'</span><span class="p">,</span> <span class="s">'Dataset'</span><span class="p">,</span> <span class="s">'Variable'</span><span class="p">,</span> <span class="s">'Tract'</span><span class="p">,</span> <span class="s">'GEOID'</span><span class="p">,</span> <span class="s">'Row ID'</span><span class="p">,</span> <span class="s">'Date'</span><span class="p">,</span>
       <span class="s">'Neighborhoods_from_gw34_aa8i'</span><span class="p">,</span> <span class="s">'Neighborhoods_from_5jp5_kw3x'</span><span class="p">,</span>
       <span class="s">'New Neighborhoods_from_s3dq_ztay'</span><span class="p">,</span> <span class="s">'layer_0_from_mgnu_zr5s'</span><span class="p">,</span>
       <span class="s">'layer_0_from_yr99_sgmi'</span><span class="p">,</span> <span class="s">'LA Neighborhoods_from_5ikr_59ci'</span><span class="p">,</span>
       <span class="s">'City Boundaries_from_22pk_kkuz'</span><span class="p">,</span> <span class="s">'Los Angeles Incorporated Cities'</span><span class="p">,</span>
       <span class="s">'la_county_tracts_from_jczq_z5ui'</span><span class="p">,</span> <span class="s">'DPW_CITY_BOUNDARIES_from_dmu2_xaer'</span><span class="p">,</span>
       <span class="s">':@computed_region_yak3_5aqv'</span><span class="p">,</span> <span class="s">':@computed_region_izm9_hpec'</span><span class="p">,</span>
       <span class="s">':@computed_region_aysi_wk4g'</span><span class="p">,</span> <span class="s">':@computed_region_an3c_5a9u'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># select data for 2016 (most recent)
</span><span class="n">prices_df</span> <span class="o">=</span> <span class="n">prices_df</span><span class="p">[</span><span class="n">prices_df</span><span class="p">[</span><span class="s">'Year'</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2016</span><span class="p">]</span>

<span class="c1"># split location into latitude and longitude
</span><span class="n">coordinates</span> <span class="o">=</span> <span class="n">prices_df</span><span class="p">[</span><span class="s">'Location'</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">,</span> <span class="n">expand</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">coordinates</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Latitude'</span><span class="p">,</span> <span class="s">'Longitude'</span><span class="p">]</span>
<span class="n">coordinates</span><span class="p">[</span><span class="s">'Latitude'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_numeric</span><span class="p">(</span><span class="n">coordinates</span><span class="p">[</span><span class="s">'Latitude'</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s">'('</span><span class="p">))</span>
<span class="n">coordinates</span><span class="p">[</span><span class="s">'Longitude'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_numeric</span><span class="p">(</span><span class="n">coordinates</span><span class="p">[</span><span class="s">'Longitude'</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s">')'</span><span class="p">))</span>
<span class="n">prices_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">prices_df</span><span class="p">,</span> <span class="n">coordinates</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">prices_df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Location'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># # drop rows without rent 
</span><span class="n">prices_df</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># keep only entries per neighborhood with largest tract number (assumed to be most recent)
</span><span class="n">prices_df</span> <span class="o">=</span> <span class="n">prices_df</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'Tract Number'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">(</span><span class="s">'Neighborhood'</span><span class="p">)</span>
<span class="n">prices_df</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">prices_df</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'index'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># rename columns
</span><span class="n">col_names</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Year'</span><span class="p">,</span> <span class="s">'Median Rent'</span><span class="p">,</span> <span class="s">'Tract Number'</span><span class="p">,</span> <span class="s">'Neighborhood'</span><span class="p">,</span> <span class="s">'Latitude'</span><span class="p">,</span> <span class="s">'Longitude'</span><span class="p">]</span>
<span class="n">prices_df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="n">col_names</span>

<span class="c1"># # final clean up
</span><span class="n">prices_df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Year'</span><span class="p">,</span> <span class="s">'Tract Number'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># prices_df.shape
</span><span class="n">prices_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Median Rent</th>
      <th>Neighborhood</th>
      <th>Latitude</th>
      <th>Longitude</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>960.0</td>
      <td>Wilmington</td>
      <td>33.778611</td>
      <td>-118.295234</td>
    </tr>
    <tr>
      <th>1</th>
      <td>719.0</td>
      <td>Elysian Park</td>
      <td>34.081932</td>
      <td>-118.238222</td>
    </tr>
    <tr>
      <th>2</th>
      <td>975.0</td>
      <td>Van Nuys</td>
      <td>34.207747</td>
      <td>-118.490984</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1263.0</td>
      <td>Angeles Crest</td>
      <td>34.294753</td>
      <td>-117.913563</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2050.0</td>
      <td>Tujunga Canyons</td>
      <td>34.340966</td>
      <td>-118.294994</td>
    </tr>
  </tbody>
</table>
</div>

<p>Merge neigh_pop_df with prices_df</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># combine neighborhood, population, median rent, and location
</span><span class="n">neigh_rent_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">left</span><span class="o">=</span><span class="n">neigh_pop_df</span><span class="p">,</span> <span class="n">right</span><span class="o">=</span><span class="n">prices_df</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s">'Neighborhood'</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s">'Neighborhood'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">neigh_rent_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">neigh_rent_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(247, 5)
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Neighborhood</th>
      <th>Population</th>
      <th>Median Rent</th>
      <th>Latitude</th>
      <th>Longitude</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Woodland Hills</td>
      <td>59661</td>
      <td>2669.0</td>
      <td>34.146928</td>
      <td>-118.591402</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Winnetka</td>
      <td>46943</td>
      <td>1022.0</td>
      <td>34.190469</td>
      <td>-118.579700</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Windsor Square</td>
      <td>5642</td>
      <td>1643.0</td>
      <td>34.065326</td>
      <td>-118.318465</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Wilmington</td>
      <td>51517</td>
      <td>960.0</td>
      <td>33.778611</td>
      <td>-118.295234</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Willowbrook</td>
      <td>34336</td>
      <td>1009.0</td>
      <td>33.914153</td>
      <td>-118.227834</td>
    </tr>
  </tbody>
</table>
</div>

<p><a id="crime_explore"></a></p>
<h4 id="314-la-crime-data">3.1.4 LA Crime data</h4>
<p>For the purpose of this analysis, I will use only the <a href="https://catalog.data.gov/dataset/crime-data-from-2010-to-present">Crime Data from 2010 to Present</a> from the past 5 years (2014-2018). According to <a href="https://data.lacity.org/d/y8tr-7khq">LA City landing page</a>, the following features will be useful for our analysis:</p>
<ol>
  <li><strong>Area ID</strong>: The LAPD has 21 Community Police Stations referred to as Geographic Areas within the department. These Geographic Areas are sequentially numbered from 1-21.</li>
  <li><strong>Area Name</strong>: The 21 Geographic Areas or Patrol Divisions are also given a name designation that references a landmark or the surrounding community that it is responsible for.</li>
  <li><strong>Location</strong>: The location where the crime incident occurred. Actual address is omitted for confidentiality. XY coordinates reflect the nearest 100 block.</li>
</ol>

<p>There are many other features, such as crimes committed, victim information, weapons, and premise, that allow for much in-depth analysis of past crimes associated with the neighborhoods, but for a more macro view of LA neighborhood safety these features should suffice.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># read data
</span><span class="n">crime_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'crime_data.csv'</span><span class="p">)</span> <span class="c1"># takes ~10 s to read
</span>
<span class="c1"># regex to find rows from years 2014-2019
</span><span class="n">crime_df</span> <span class="o">=</span> <span class="n">crime_df</span><span class="p">[</span><span class="n">crime_df</span><span class="p">[</span><span class="s">'Date Occurred'</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s">'.*(201[4-9])'</span><span class="p">,</span> <span class="n">regex</span><span class="o">=</span><span class="bp">True</span><span class="p">)]</span>

<span class="c1"># keep the columns we want
</span><span class="n">crime_df</span> <span class="o">=</span> <span class="n">crime_df</span><span class="o">.</span><span class="n">loc</span><span class="p">[:,</span> <span class="p">[</span><span class="s">'Area ID'</span><span class="p">,</span> <span class="s">'Area Name'</span><span class="p">,</span> <span class="s">'Location '</span><span class="p">]]</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>

<span class="c1"># separate Location into latitude and longitude
</span><span class="n">coordinates</span> <span class="o">=</span> <span class="n">crime_df</span><span class="p">[</span><span class="s">'Location '</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">,</span> <span class="n">expand</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">coordinates</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Latitude'</span><span class="p">,</span> <span class="s">'Longitude'</span><span class="p">]</span>
<span class="n">coordinates</span><span class="p">[</span><span class="s">'Latitude'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_numeric</span><span class="p">(</span><span class="n">coordinates</span><span class="p">[</span><span class="s">'Latitude'</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s">'('</span><span class="p">))</span>
<span class="n">coordinates</span><span class="p">[</span><span class="s">'Longitude'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_numeric</span><span class="p">(</span><span class="n">coordinates</span><span class="p">[</span><span class="s">'Longitude'</span><span class="p">]</span><span class="o">.</span><span class="nb">str</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s">')'</span><span class="p">))</span>
<span class="n">crime_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">crime_df</span><span class="p">,</span> <span class="n">coordinates</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">crime_df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'index'</span><span class="p">,</span> <span class="s">'Location '</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># group into neighborhoods
</span><span class="n">crime_df</span><span class="o">.</span><span class="n">tail</span><span class="p">()</span>
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Area ID</th>
      <th>Area Name</th>
      <th>Latitude</th>
      <th>Longitude</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1149914</th>
      <td>18</td>
      <td>Southeast</td>
      <td>33.9393</td>
      <td>-118.2587</td>
    </tr>
    <tr>
      <th>1149915</th>
      <td>18</td>
      <td>Southeast</td>
      <td>33.9310</td>
      <td>-118.2826</td>
    </tr>
    <tr>
      <th>1149916</th>
      <td>18</td>
      <td>Southeast</td>
      <td>33.9265</td>
      <td>-118.2739</td>
    </tr>
    <tr>
      <th>1149917</th>
      <td>18</td>
      <td>Southeast</td>
      <td>33.9451</td>
      <td>-118.2482</td>
    </tr>
    <tr>
      <th>1149918</th>
      <td>18</td>
      <td>Southeast</td>
      <td>33.9519</td>
      <td>-118.2739</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># rank neighorhood safety based on the total crimes (i.e. lowest ranking means highest crime counts)
</span><span class="n">crime_counts</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">crime_df</span><span class="p">[</span><span class="s">'Area Name'</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_values</span><span class="p">())</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="c1"># safety_rankings['Safety Ranking'] = list(pd.to_numeric(safety_rankings.index)+1)
</span><span class="n">crime_counts</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Area Name'</span><span class="p">,</span> <span class="s">'Crime Counts'</span><span class="p">]</span>

<span class="c1"># set average coordinates per area as location
</span><span class="n">neigh_coordinates</span> <span class="o">=</span> <span class="n">crime_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Area Name'</span><span class="p">)[[</span><span class="s">'Latitude'</span><span class="p">,</span> <span class="s">'Longitude'</span><span class="p">]]</span><span class="o">.</span><span class="n">agg</span><span class="p">([</span><span class="n">np</span><span class="o">.</span><span class="n">mean</span><span class="p">])</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span> <span class="c1"># average coordinate of area
</span><span class="n">neigh_coordinates</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Area Name'</span><span class="p">,</span> <span class="s">'Latitude'</span><span class="p">,</span> <span class="s">'Longitude'</span><span class="p">]</span>

<span class="c1"># combine both df together
</span><span class="n">safety_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">left</span><span class="o">=</span><span class="n">crime_counts</span><span class="p">,</span> <span class="n">right</span><span class="o">=</span><span class="n">neigh_coordinates</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s">'Area Name'</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s">'Area Name'</span><span class="p">)</span>
<span class="n">safety_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>

</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Area Name</th>
      <th>Crime Counts</th>
      <th>Latitude</th>
      <th>Longitude</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Foothill</td>
      <td>40819</td>
      <td>34.247529</td>
      <td>-118.374105</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Hollenbeck</td>
      <td>44238</td>
      <td>34.042074</td>
      <td>-118.154040</td>
    </tr>
    <tr>
      <th>2</th>
      <td>West Valley</td>
      <td>47553</td>
      <td>34.181970</td>
      <td>-118.503372</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Harbor</td>
      <td>48141</td>
      <td>33.759340</td>
      <td>-118.246807</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Wilshire</td>
      <td>48261</td>
      <td>34.056564</td>
      <td>-118.334722</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Find the closest neighborhood to each police area by comparing Euclidean distances
</span><span class="n">closest_area</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">area_list</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">lat_neigh</span><span class="p">,</span> <span class="n">lng_neigh</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">neigh_rent_df</span><span class="p">[</span><span class="s">'Latitude'</span><span class="p">],</span> <span class="n">neigh_rent_df</span><span class="p">[</span><span class="s">'Longitude'</span><span class="p">]):</span>
    <span class="n">best_distance</span> <span class="o">=</span> <span class="mf">1e6</span>
    <span class="k">for</span> <span class="n">area</span><span class="p">,</span> <span class="n">lat_area</span><span class="p">,</span> <span class="n">lng_area</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">safety_df</span><span class="p">[</span><span class="s">'Area Name'</span><span class="p">],</span> <span class="n">safety_df</span><span class="p">[</span><span class="s">'Latitude'</span><span class="p">],</span> <span class="n">safety_df</span><span class="p">[</span><span class="s">'Longitude'</span><span class="p">]):</span>
        <span class="n">distance</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">((</span><span class="n">lat_neigh</span> <span class="o">-</span> <span class="n">lat_area</span><span class="p">)</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="p">(</span><span class="n">lng_neigh</span> <span class="o">-</span> <span class="n">lng_area</span><span class="p">)</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">distance</span> <span class="o">&lt;</span> <span class="n">best_distance</span><span class="p">:</span>
            <span class="n">best_distance</span> <span class="o">=</span> <span class="n">distance</span>
            <span class="n">closest_area</span> <span class="o">=</span> <span class="n">area</span>
    <span class="n">area_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">closest_area</span><span class="p">)</span>
            
<span class="n">neigh_rent_df</span><span class="p">[</span><span class="s">'Area Name'</span><span class="p">]</span> <span class="o">=</span> <span class="n">area_list</span>
<span class="n">neigh_rent_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Neighborhood</th>
      <th>Population</th>
      <th>Median Rent</th>
      <th>Latitude</th>
      <th>Longitude</th>
      <th>Area Name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Woodland Hills</td>
      <td>59661</td>
      <td>2669.0</td>
      <td>34.146928</td>
      <td>-118.591402</td>
      <td>Topanga</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Winnetka</td>
      <td>46943</td>
      <td>1022.0</td>
      <td>34.190469</td>
      <td>-118.579700</td>
      <td>Topanga</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Windsor Square</td>
      <td>5642</td>
      <td>1643.0</td>
      <td>34.065326</td>
      <td>-118.318465</td>
      <td>Wilshire</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Wilmington</td>
      <td>51517</td>
      <td>960.0</td>
      <td>33.778611</td>
      <td>-118.295234</td>
      <td>Harbor</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Willowbrook</td>
      <td>34336</td>
      <td>1009.0</td>
      <td>33.914153</td>
      <td>-118.227834</td>
      <td>Southeast</td>
    </tr>
  </tbody>
</table>
</div>

<p><a id="combine"></a></p>
<h4 id="315-combine-la-crime-venues-and-rental-price-data">3.1.5 Combine LA crime, venues, and rental price data</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">neigh_rent_crime_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">left</span><span class="o">=</span><span class="n">neigh_rent_df</span><span class="p">,</span> 
                               <span class="n">right</span><span class="o">=</span><span class="n">safety_df</span><span class="p">,</span> 
                               <span class="n">left_on</span><span class="o">=</span><span class="s">'Area Name'</span><span class="p">,</span> 
                               <span class="n">right_on</span><span class="o">=</span><span class="s">'Area Name'</span><span class="p">,</span>
                               <span class="n">suffixes</span><span class="o">=</span><span class="p">(</span><span class="s">'_neigh'</span><span class="p">,</span> <span class="s">'_area'</span><span class="p">))</span>
<span class="n">neigh_rent_crime_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Neighborhood</th>
      <th>Population</th>
      <th>Median Rent</th>
      <th>Latitude_neigh</th>
      <th>Longitude_neigh</th>
      <th>Area Name</th>
      <th>Crime Counts</th>
      <th>Latitude_area</th>
      <th>Longitude_area</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Woodland Hills</td>
      <td>59661</td>
      <td>2669.0</td>
      <td>34.146928</td>
      <td>-118.591402</td>
      <td>Topanga</td>
      <td>53413</td>
      <td>34.187927</td>
      <td>-118.583495</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Winnetka</td>
      <td>46943</td>
      <td>1022.0</td>
      <td>34.190469</td>
      <td>-118.579700</td>
      <td>Topanga</td>
      <td>53413</td>
      <td>34.187927</td>
      <td>-118.583495</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Westlake Village</td>
      <td>8663</td>
      <td>3034.0</td>
      <td>34.158577</td>
      <td>-118.801884</td>
      <td>Topanga</td>
      <td>53413</td>
      <td>34.187927</td>
      <td>-118.583495</td>
    </tr>
    <tr>
      <th>3</th>
      <td>West Hills</td>
      <td>38814</td>
      <td>2618.0</td>
      <td>34.194387</td>
      <td>-118.655217</td>
      <td>Topanga</td>
      <td>53413</td>
      <td>34.187927</td>
      <td>-118.583495</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Topanga</td>
      <td>7425</td>
      <td>2926.0</td>
      <td>34.059906</td>
      <td>-118.610282</td>
      <td>Topanga</td>
      <td>53413</td>
      <td>34.187927</td>
      <td>-118.583495</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># find crime rate per capita
</span><span class="n">area_population</span> <span class="o">=</span> <span class="n">neigh_rent_crime_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Area Name'</span><span class="p">)[[</span><span class="s">'Population'</span><span class="p">]]</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span>
<span class="n">area_population</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">area_population</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Area Name'</span><span class="p">,</span> <span class="s">'Area Population'</span><span class="p">]</span>

<span class="n">safety_df2</span> <span class="o">=</span> <span class="n">safety_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'Area Name'</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">area_population</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s">'Area Name'</span><span class="p">),</span> <span class="n">lsuffix</span><span class="o">=</span><span class="s">'_area'</span><span class="p">,</span> <span class="n">rsuffix</span><span class="o">=</span><span class="s">'_neigh'</span><span class="p">)</span>
<span class="n">safety_df2</span><span class="p">[</span><span class="s">'Crime Rate'</span><span class="p">]</span> <span class="o">=</span> <span class="n">safety_df2</span><span class="p">[</span><span class="s">'Crime Counts'</span><span class="p">]</span><span class="o">/</span><span class="n">safety_df2</span><span class="p">[</span><span class="s">'Area Population'</span><span class="p">]</span>
<span class="n">safety_df2</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">safety_df2</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'Crime Rate'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">safety_df2</span><span class="p">[</span><span class="s">'Safety Ranking'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">safety_df2</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>

<span class="n">neigh_rent_safety_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">left</span><span class="o">=</span><span class="n">neigh_rent_crime_df</span><span class="p">,</span> <span class="n">right</span><span class="o">=</span><span class="n">safety_df2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'Area Name'</span><span class="p">)</span>

<span class="c1"># remove redundant columns
</span><span class="n">neigh_rent_safety_df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Latitude'</span><span class="p">,</span> <span class="s">'Longitude'</span><span class="p">,</span> <span class="s">'Crime Counts_y'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="n">neigh_df_cleaned</span> <span class="o">=</span> <span class="n">neigh_rent_safety_df</span><span class="p">[[</span><span class="s">'Neighborhood'</span><span class="p">,</span> <span class="s">'Median Rent'</span><span class="p">,</span> <span class="s">'Population'</span><span class="p">,</span> <span class="s">'Safety Ranking'</span><span class="p">]]</span>

<span class="c1"># normalize numerical columns
</span><span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">preprocessing</span>
<span class="n">scaled_neigh_df</span> <span class="o">=</span> <span class="n">neigh_df_cleaned</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">scaler</span> <span class="o">=</span> <span class="n">preprocessing</span><span class="o">.</span><span class="n">MinMaxScaler</span><span class="p">()</span>
<span class="n">cols</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Median Rent'</span><span class="p">,</span> <span class="s">'Population'</span><span class="p">,</span> <span class="s">'Safety Ranking'</span><span class="p">]</span>
<span class="n">x_scaled</span> <span class="o">=</span> <span class="n">scaler</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">scaled_neigh_df</span><span class="p">[</span><span class="n">cols</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>
<span class="n">scaled_neigh_df</span><span class="o">.</span><span class="n">loc</span><span class="p">[:,</span><span class="n">cols</span><span class="p">]</span> <span class="o">=</span> <span class="n">x_scaled</span>

<span class="k">print</span><span class="p">(</span><span class="n">scaled_neigh_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">scaled_neigh_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>

</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(247, 4)
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
  
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Neighborhood</th>
      <th>Median Rent</th>
      <th>Population</th>
      <th>Safety Ranking</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Woodland Hills</td>
      <td>0.721047</td>
      <td>0.128755</td>
      <td>0.65</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Winnetka</td>
      <td>0.168177</td>
      <td>0.101265</td>
      <td>0.65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Westlake Village</td>
      <td>0.843572</td>
      <td>0.018522</td>
      <td>0.65</td>
    </tr>
    <tr>
      <th>3</th>
      <td>West Hills</td>
      <td>0.703927</td>
      <td>0.083694</td>
      <td>0.65</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Topanga</td>
      <td>0.807318</td>
      <td>0.015846</td>
      <td>0.65</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># finally, get the total combined df
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">scaled_neigh_df</span><span class="p">,</span> <span class="n">la_venue_onehot_grouped</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s">'Neighborhood'</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s">'City'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(220, 438)
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Neighborhood_x</th>
      <th>Median Rent</th>
      <th>Population</th>
      <th>Safety Ranking</th>
      <th>City</th>
      <th>ATM</th>
      <th>Accessories Store</th>
      <th>Adult Boutique</th>
      <th>Advertising Agency</th>
      <th>African Restaurant</th>
      <th>...</th>
      <th>Warehouse Store</th>
      <th>Water Park</th>
      <th>Waterfront</th>
      <th>Whisky Bar</th>
      <th>Wine Bar</th>
      <th>Wine Shop</th>
      <th>Wings Joint</th>
      <th>Women's Store</th>
      <th>Yoga Studio</th>
      <th>Zoo</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Winnetka</td>
      <td>0.168177</td>
      <td>0.101265</td>
      <td>0.65</td>
      <td>Winnetka</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.000</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Westlake Village</td>
      <td>0.843572</td>
      <td>0.018522</td>
      <td>0.65</td>
      <td>Westlake Village</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.000</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>West Hills</td>
      <td>0.703927</td>
      <td>0.083694</td>
      <td>0.65</td>
      <td>West Hills</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.000</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Topanga</td>
      <td>0.807318</td>
      <td>0.015846</td>
      <td>0.65</td>
      <td>Topanga</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.000000</td>
      <td>0.0</td>
      <td>0.125</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Tarzana</td>
      <td>0.932528</td>
      <td>0.076535</td>
      <td>0.65</td>
      <td>Tarzana</td>
      <td>0.014493</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>...</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.014493</td>
      <td>0.0</td>
      <td>0.000</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
  </tbody>
</table>
<p>5 rows Ã— 438 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create map of New York using latitude and longitude values
</span><span class="n">la_lat</span> <span class="o">=</span> <span class="mf">34.0522</span>
<span class="n">la_lng</span> <span class="o">=</span> <span class="o">-</span><span class="mf">118.2437</span>
<span class="n">map_la</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Map</span><span class="p">(</span><span class="n">location</span><span class="o">=</span><span class="p">[</span><span class="n">la_lat</span><span class="p">,</span> <span class="n">la_lng</span><span class="p">],</span> <span class="n">zoom_start</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>

<span class="c1"># add markers to map
# show areas
</span><span class="k">for</span> <span class="n">lat</span><span class="p">,</span> <span class="n">lng</span><span class="p">,</span> <span class="n">area</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">safety_df</span><span class="p">[</span><span class="s">'Latitude'</span><span class="p">],</span> 
                          <span class="n">safety_df</span><span class="p">[</span><span class="s">'Longitude'</span><span class="p">],</span> 
                          <span class="n">safety_df</span><span class="p">[</span><span class="s">'Area Name'</span><span class="p">]):</span>
    <span class="n">label</span> <span class="o">=</span> <span class="s">'{}'</span><span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">area</span><span class="p">)</span>
    <span class="n">label</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Popup</span><span class="p">(</span><span class="n">label</span><span class="p">,</span> <span class="n">parse_html</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">folium</span><span class="o">.</span><span class="n">CircleMarker</span><span class="p">(</span>
        <span class="p">[</span><span class="n">lat</span><span class="p">,</span> <span class="n">lng</span><span class="p">],</span>
        <span class="n">radius</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
        <span class="n">popup</span><span class="o">=</span><span class="n">label</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="s">'blue'</span><span class="p">,</span>
        <span class="n">fill</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">fill_color</span><span class="o">=</span><span class="s">'#3186cc'</span><span class="p">,</span>
        <span class="n">fill_opacity</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span>
        <span class="n">parse_html</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">add_to</span><span class="p">(</span><span class="n">map_la</span><span class="p">)</span>  
    
<span class="c1"># show neighborhoods
</span><span class="k">for</span> <span class="n">lat</span><span class="p">,</span> <span class="n">lng</span><span class="p">,</span> <span class="n">city</span><span class="p">,</span> <span class="n">area</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">neigh_rent_safety_df</span><span class="p">[</span><span class="s">'Latitude_neigh'</span><span class="p">],</span> 
                                <span class="n">neigh_rent_safety_df</span><span class="p">[</span><span class="s">'Longitude_neigh'</span><span class="p">],</span> 
                                <span class="n">neigh_rent_safety_df</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">],</span> 
                                <span class="n">neigh_rent_safety_df</span><span class="p">[</span><span class="s">'Area Name'</span><span class="p">]):</span>
    <span class="n">label</span> <span class="o">=</span> <span class="s">'{}, {}'</span><span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">city</span><span class="p">,</span> <span class="n">area</span><span class="p">)</span>
    <span class="n">label</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Popup</span><span class="p">(</span><span class="n">label</span><span class="p">,</span> <span class="n">parse_html</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">folium</span><span class="o">.</span><span class="n">CircleMarker</span><span class="p">(</span>
        <span class="p">[</span><span class="n">lat</span><span class="p">,</span> <span class="n">lng</span><span class="p">],</span>
        <span class="n">radius</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
        <span class="n">popup</span><span class="o">=</span><span class="n">label</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="s">'green'</span><span class="p">,</span>
        <span class="n">fill</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">fill_color</span><span class="o">=</span><span class="s">'#3186cc'</span><span class="p">,</span>
        <span class="n">fill_opacity</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span>
        <span class="n">parse_html</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">add_to</span><span class="p">(</span><span class="n">map_la</span><span class="p">)</span>  
    
<span class="n">map_la</span>
</code></pre></div></div>

<div style="width:100%;"><div style="position:relative;width:100%;height:0;padding-bottom:60%;"><iframe src="data:text/html;charset=utf-8;base64," style="position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;" allowfullscreen="" webkitallowfullscreen="" mozallowfullscreen=""></iframe></div></div>

<p><a id="kmeans"></a></p>
<h3 id="32-k-means-clustering">3.2 K-means clustering</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.cluster</span> <span class="kn">import</span> <span class="n">KMeans</span>

<span class="n">n_clusters</span> <span class="o">=</span> <span class="mi">10</span>
<span class="n">df_cluster</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Neighborhood_x'</span><span class="p">,</span> <span class="s">'City'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">kmeans</span> <span class="o">=</span> <span class="n">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="n">n_clusters</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">df_cluster</span><span class="p">)</span>

<span class="n">kmeans</span><span class="o">.</span><span class="n">labels_</span><span class="p">[:</span><span class="mi">10</span><span class="p">]</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([2, 1, 1, 1, 1, 5, 1, 5, 5, 5], dtype=int32)
</code></pre></div></div>

<p><a id="results"></a></p>
<h2 id="4-results">4. Results</h2>
<p>(Where you discuss the results. Make a new dataframe to organize results)</p>

<p>Letâ€™s summarize all the findings and K-means results in one dataframe.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">return_most_common_venues</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">num_top_venues</span><span class="p">):</span>
    <span class="n">row_categories</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
    <span class="n">row_categories_sorted</span> <span class="o">=</span> <span class="n">row_categories</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">row_categories_sorted</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="n">num_top_venues</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create columns according to number of top venues
# columns = ['Neighborhood']
</span><span class="n">num_top_venues</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">ind</span> <span class="ow">in</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">num_top_venues</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">columns</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">'{}{} Most Common Venue'</span><span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">ind</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">indicators</span><span class="p">[</span><span class="n">ind</span><span class="p">]))</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="n">columns</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">'{}th Most Common Venue'</span><span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">ind</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
        
<span class="n">final_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="n">columns</span><span class="p">)</span>
<span class="n">final_df</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'Neighborhood_x'</span><span class="p">]</span>


<span class="c1"># get top venues
</span><span class="n">c</span> <span class="o">=</span> <span class="mi">1</span>
<span class="k">for</span> <span class="n">neighborhood</span> <span class="ow">in</span> <span class="n">final_df</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]:</span>
    <span class="n">c</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">final_df</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">final_df</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]</span> <span class="o">==</span> <span class="n">neighborhood</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span> <span class="mi">1</span><span class="p">:]</span> <span class="o">=</span> <span class="n">return_most_common_venues</span><span class="p">(</span>
        <span class="n">la_venue_onehot_grouped</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">la_venue_onehot_grouped</span><span class="p">[</span><span class="s">'City'</span><span class="p">]</span> <span class="o">==</span>  <span class="n">neighborhood</span><span class="p">)[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="mi">1</span><span class="p">:],</span> 
        <span class="n">num_top_venues</span><span class="p">)</span>
    
<span class="c1"># put in safety ranking, median rent, and population
</span><span class="n">final_df</span> <span class="o">=</span> <span class="n">final_df</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">neigh_df_cleaned</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'Neighborhood'</span><span class="p">)</span>
<span class="n">final_df</span> <span class="o">=</span> <span class="n">final_df</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">neigh_rent_df</span><span class="p">[[</span><span class="s">'Neighborhood'</span><span class="p">,</span> <span class="s">'Latitude'</span><span class="p">,</span> <span class="s">'Longitude'</span><span class="p">]],</span> <span class="n">on</span><span class="o">=</span><span class="s">'Neighborhood'</span><span class="p">)</span>
<span class="n">final_df</span><span class="p">[</span><span class="s">'Cluster'</span><span class="p">]</span> <span class="o">=</span> <span class="n">kmeans</span><span class="o">.</span><span class="n">labels_</span> <span class="o">+</span> <span class="mi">1</span>


<span class="k">print</span><span class="p">(</span><span class="n">final_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">final_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
<span class="c1"># final_df.head()
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(220, 12)
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Neighborhood</th>
      <th>1th Most Common Venue</th>
      <th>2th Most Common Venue</th>
      <th>3th Most Common Venue</th>
      <th>4th Most Common Venue</th>
      <th>5th Most Common Venue</th>
      <th>Median Rent</th>
      <th>Population</th>
      <th>Safety Ranking</th>
      <th>Latitude</th>
      <th>Longitude</th>
      <th>Cluster</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Winnetka</td>
      <td>Video Store</td>
      <td>Pizza Place</td>
      <td>Bar</td>
      <td>Ice Cream Shop</td>
      <td>Hotel</td>
      <td>1022.0</td>
      <td>46943</td>
      <td>15</td>
      <td>34.190469</td>
      <td>-118.579700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Westlake Village</td>
      <td>Farm</td>
      <td>Inn</td>
      <td>Sandwich Place</td>
      <td>Falafel Restaurant</td>
      <td>Empanada Restaurant</td>
      <td>3034.0</td>
      <td>8663</td>
      <td>15</td>
      <td>34.158577</td>
      <td>-118.801884</td>
      <td>2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>West Hills</td>
      <td>Grocery Store</td>
      <td>Pub</td>
      <td>Gym</td>
      <td>Shopping Mall</td>
      <td>Sandwich Place</td>
      <td>2618.0</td>
      <td>38814</td>
      <td>15</td>
      <td>34.194387</td>
      <td>-118.655217</td>
      <td>2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Topanga</td>
      <td>Women's Store</td>
      <td>Gourmet Shop</td>
      <td>Farmers Market</td>
      <td>Bookstore</td>
      <td>Furniture / Home Store</td>
      <td>2926.0</td>
      <td>7425</td>
      <td>15</td>
      <td>34.059906</td>
      <td>-118.610282</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Tarzana</td>
      <td>Sushi Restaurant</td>
      <td>Pizza Place</td>
      <td>Coffee Shop</td>
      <td>Fast Food Restaurant</td>
      <td>Gym / Fitness Center</td>
      <td>3299.0</td>
      <td>35502</td>
      <td>15</td>
      <td>34.145344</td>
      <td>-118.554520</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>

<p>We end up with 220 different neighborhoods, with 11 metrics to evaluate each neighborhood.</p>

<p><a id="discussion"></a></p>
<h2 id="5-discussion">5. Discussion</h2>
<p>(Where you discuss any observations you noted and any recommendations you can make based on the results)</p>

<p>First, letâ€™s visualize the clustered neighborhoods,</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create map of New York using latitude and longitude values
</span><span class="n">colors</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">cmap</span> <span class="o">=</span> <span class="n">cm</span><span class="o">.</span><span class="n">get_cmap</span><span class="p">(</span><span class="s">'tab10'</span><span class="p">,</span> <span class="n">n_clusters</span><span class="p">)</span>    <span class="c1"># PiYG
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">cmap</span><span class="o">.</span><span class="n">N</span><span class="p">):</span>
    <span class="n">rgb</span> <span class="o">=</span> <span class="n">cmap</span><span class="p">(</span><span class="n">i</span><span class="p">)[:</span><span class="mi">3</span><span class="p">]</span> <span class="c1"># will return rgba, we take only first 3 so we get rgb
</span>    <span class="n">colors</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">matplotlib</span><span class="o">.</span><span class="n">colors</span><span class="o">.</span><span class="n">rgb2hex</span><span class="p">(</span><span class="n">rgb</span><span class="p">))</span>

<span class="n">la_lat</span> <span class="o">=</span> <span class="mf">34.0522</span>
<span class="n">la_lng</span> <span class="o">=</span> <span class="o">-</span><span class="mf">118.2437</span>
<span class="n">map_la</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Map</span><span class="p">(</span><span class="n">location</span><span class="o">=</span><span class="p">[</span><span class="n">la_lat</span><span class="p">,</span> <span class="n">la_lng</span><span class="p">],</span> <span class="n">zoom_start</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
<span class="c1"># colors = ['#ff00ff', '#ff0000', '#00ff00', '#00ffff', '#0000ff']
</span>
<span class="c1"># show neighborhoods
</span><span class="k">for</span> <span class="n">lat</span><span class="p">,</span> <span class="n">lng</span><span class="p">,</span> <span class="n">neighborhood</span><span class="p">,</span> <span class="n">cluster</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">final_df</span><span class="p">[</span><span class="s">'Latitude'</span><span class="p">],</span> 
                                           <span class="n">final_df</span><span class="p">[</span><span class="s">'Longitude'</span><span class="p">],</span> 
                                           <span class="n">final_df</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">],</span>
                                           <span class="n">final_df</span><span class="p">[</span><span class="s">'Cluster'</span><span class="p">]):</span>
    <span class="n">label</span> <span class="o">=</span> <span class="s">'{} ({})'</span><span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">neighborhood</span><span class="p">,</span> <span class="n">cluster</span><span class="p">)</span>
    <span class="n">label</span> <span class="o">=</span> <span class="n">folium</span><span class="o">.</span><span class="n">Popup</span><span class="p">(</span><span class="n">label</span><span class="p">,</span> <span class="n">parse_html</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">folium</span><span class="o">.</span><span class="n">CircleMarker</span><span class="p">(</span>
        <span class="p">[</span><span class="n">lat</span><span class="p">,</span> <span class="n">lng</span><span class="p">],</span>
        <span class="n">radius</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
        <span class="n">popup</span><span class="o">=</span><span class="n">label</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="n">colors</span><span class="p">[</span><span class="n">cluster</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">fill</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">fill_color</span><span class="o">=</span><span class="n">colors</span><span class="p">[</span><span class="n">cluster</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span>
        <span class="n">fill_opacity</span><span class="o">=</span><span class="mf">0.7</span><span class="p">,</span>
        <span class="n">parse_html</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">add_to</span><span class="p">(</span><span class="n">map_la</span><span class="p">)</span>  

<span class="n">map_la</span>
</code></pre></div></div>

<div style="width:100%;"><div style="position:relative;width:100%;height:0;padding-bottom:60%;"><iframe src="data:text/html;charset=utf-8;base64," style="position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;" allowfullscreen="" webkitallowfullscreen="" mozallowfullscreen=""></iframe></div></div>

<p>Upon a first glance, we can see that some clusters are well localized. Some quick observations:</p>

<ol>
  <li>Cluster 1 is mostly in east and south LA areas,</li>
  <li>Cluster 2 is mostly near the coast or in the mountainous areas such as Malibu, Palos Verdes and Topanga</li>
  <li>Cluster 3 is near LAX, south of 10 freeway, surrounding Inglewood area</li>
  <li>Cluster 4 is all the way near Lancast and Palmdale area</li>
  <li>Cluster 5 is only in Silver Lake</li>
  <li>Cluster 6 is mostly in west LA, and mostly north of freeway 10 and west of 405</li>
  <li>Cluster 7 is in east and south LA, covering a large swatch of the land</li>
  <li>Cluster 8 is only in Long Beach</li>
  <li>Cluster 9 is the area surrounding downtown LA, and extends a bit south to Huntington Park</li>
  <li>Cluster 10 is Downey and Mount Washington</li>
</ol>

<p>Letâ€™s see the characteristics of the 10 different clustered areas.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">averages</span> <span class="o">=</span> <span class="n">final_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Cluster'</span><span class="p">)[[</span><span class="s">'Median Rent'</span><span class="p">,</span> <span class="s">'Safety Ranking'</span><span class="p">,</span> <span class="s">'Population'</span><span class="p">]]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="n">averages</span>
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Median Rent</th>
      <th>Safety Ranking</th>
      <th>Population</th>
    </tr>
    <tr>
      <th>Cluster</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>1150.144928</td>
      <td>20.434783</td>
      <td>31092.478261</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3059.125000</td>
      <td>17.125000</td>
      <td>17502.375000</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1328.813953</td>
      <td>11.279070</td>
      <td>36828.325581</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1287.333333</td>
      <td>18.666667</td>
      <td>4388.000000</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1166.000000</td>
      <td>7.000000</td>
      <td>30972.000000</td>
    </tr>
    <tr>
      <th>6</th>
      <td>1872.793103</td>
      <td>15.965517</td>
      <td>24550.275862</td>
    </tr>
    <tr>
      <th>7</th>
      <td>1550.410256</td>
      <td>21.307692</td>
      <td>58453.102564</td>
    </tr>
    <tr>
      <th>8</th>
      <td>2225.000000</td>
      <td>21.000000</td>
      <td>462731.000000</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1096.176471</td>
      <td>4.882353</td>
      <td>42071.235294</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1472.000000</td>
      <td>19.500000</td>
      <td>60025.500000</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># plot average median rent vs average safety ranking
</span><span class="n">averages</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Median Rent'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Safety Ranking'</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">'scatter'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="/static/imgs/output_44_0.png" alt="png" width="50%" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># plot average median rent vs average safety ranking
</span><span class="n">averages</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Median Rent'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Population'</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">'scatter'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="/static/imgs/output_45_0.png" alt="png" width="50%" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># plot average median rent vs average safety ranking
</span><span class="n">averages</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Safety Ranking'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'Population'</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">'scatter'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="/static/imgs/output_46_0.png" alt="png" width="50%" /></p>

<h3 id="51-rent-prices-and-neighborhood-safety">5.1 Rent prices and neighborhood safety</h3>

<p>While neighborhood safety tend to increase with median rent prices, especially in clusters such as #2, which contains Bel-Air, San Marino, Palos Verdes, and #8, which encompasses the vicinity of Long Beach (Iâ€™m surprised to find Long Beach with such high rental prices!), there are still some areas that are safe and yet very affordable, such as clusters #1, #4, #7, and #10. However, the safest neighborhoods may not always attract young professionals, since most of those neighborhoods are in east LA, in cities such as Pomona, Palmdale, and San Fernando Valley, which is far away from the more lively districts with restaurants and bars. The kind of area that young professionals want to live in probably is a balance between those criteria.</p>

<p>Silver Lake, which is known to be inhabited by lots of young professionals, offers very cheap average median rent at \$1166, but only has a below-average safety ranking of 7 (out of 21). So perhaps some people would prefer to live somewhere that is more expensive yet still pretty safe, such as areas in cluster #6, in neighborhoods like West Hollywood, Santa Monica, Culver City, Palms, and Mid-Wilshire. Even though the median rent in those places is above average at ~\$1800, their average safety ranking is 16, which is much higher than neighborhoods currently undergoing gentrification, such as Silver Lake.</p>

<p>Median rent and safety rankings donâ€™t correlate with population. In other words, no matter how large the city is, the rent prices and safety of the neighborhood remains pretty much the same.</p>

<p>Interestingly, Koreatown is grouped in cluster 1, which has both low rent and high safety ranking. I always thought of Koreatown as somewhere that is safe during the day, but requires caution at night, but maybe the high volume  of restaurants and activities there help to reduce crimes.</p>

<p>Based on these clustering results, I would recommend any new LA transplants to move to somewhere in west LA (if you can afford it), where the medium to high rental prices is offset by safe neighborhoods and lots of coffee shops, mexican restaurants, and pizza places. Despite the cheap rent, I would not recommend living in the areas surrounding downtown LA due to the high crime rates. Within downtown LA there seems to be no cluster, which is strange.</p>

<p>Next, letâ€™s dig a little deeper into the neighborhood venues.</p>

<h3 id="52-neighborhood-venues">5.2 Neighborhood venues</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">final_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Cluster'</span><span class="p">)[[</span><span class="s">'1th Most Common Venue'</span><span class="p">,</span> 
                              <span class="s">'2th Most Common Venue'</span><span class="p">,</span> 
                              <span class="s">'3th Most Common Venue'</span><span class="p">,</span>
                              <span class="s">'4th Most Common Venue'</span><span class="p">,</span>
                              <span class="s">'5th Most Common Venue'</span><span class="p">]]</span><span class="o">.</span><span class="n">agg</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">index</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>1th Most Common Venue</th>
      <th>2th Most Common Venue</th>
      <th>3th Most Common Venue</th>
      <th>4th Most Common Venue</th>
      <th>5th Most Common Venue</th>
    </tr>
    <tr>
      <th>Cluster</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>Mexican Restaurant</td>
      <td>Fast Food Restaurant</td>
      <td>Pizza Place</td>
      <td>Grocery Store</td>
      <td>Convenience Store</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Sushi Restaurant</td>
      <td>Pizza Place</td>
      <td>Zoo</td>
      <td>Fair</td>
      <td>Empanada Restaurant</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Pizza Place</td>
      <td>Fast Food Restaurant</td>
      <td>Park</td>
      <td>Park</td>
      <td>Park</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Food</td>
      <td>Zoo</td>
      <td>Farm</td>
      <td>Empanada Restaurant</td>
      <td>English Restaurant</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Lake</td>
      <td>Zoo</td>
      <td>Falafel Restaurant</td>
      <td>Empanada Restaurant</td>
      <td>English Restaurant</td>
    </tr>
    <tr>
      <th>6</th>
      <td>Coffee Shop</td>
      <td>Convenience Store</td>
      <td>Mexican Restaurant</td>
      <td>Pizza Place</td>
      <td>Coffee Shop</td>
    </tr>
    <tr>
      <th>7</th>
      <td>Mexican Restaurant</td>
      <td>Fast Food Restaurant</td>
      <td>Mexican Restaurant</td>
      <td>Sandwich Place</td>
      <td>Coffee Shop</td>
    </tr>
    <tr>
      <th>8</th>
      <td>Fishing Spot</td>
      <td>American Restaurant</td>
      <td>Zoo</td>
      <td>Farm</td>
      <td>English Restaurant</td>
    </tr>
    <tr>
      <th>9</th>
      <td>Coffee Shop</td>
      <td>Fast Food Restaurant</td>
      <td>Coffee Shop</td>
      <td>American Restaurant</td>
      <td>CafÃ©</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Ski Chairlift</td>
      <td>Mountain</td>
      <td>Zoo</td>
      <td>Falafel Restaurant</td>
      <td>Empanada Restaurant</td>
    </tr>
  </tbody>
</table>
</div>

<p>In the very safe neighborhoods such as clusters #1, #7, #8, and #10, Mexican restaurants seem to be very common (maybe thatâ€™s just true across LA in general). After checking cluster #10 (Downey and Mount Washington), I realized that thereâ€™s not much venue information there besides mountain and ski chairlift, so the information is probably not very accurate.</p>

<p>In the high rental price clusters, #2 and #8, sushi, English and American restaurants make the top 5 common venues, which is pretty indicative of above average communities. Both areas also contain zoos as well as farms and fishing spot. These are indicative of less urban areas with lots of mountains and natural areas, which I can definitely see happening with areas like Malibu, Topanga, and Palos Verdes.</p>

<p>Most of the clusters seems to contain pretty similar venues despite safety rankings. Most have coffee shops, Mexican restaurants, fast food restaurants, or pizza places. Iâ€™d interpret this as most of LA being saturated with generic strip malls that offer those kind of venues. Therefore, to truly discover the uniqueness of each neighborhood, we probably have to dig deeper than the top 5 most common venues. This is interesting and true from my experience, because at a first glance, LA really does seem like a giant strip mall, and to outsiders the different neighborhoods may appear to lack uniqueness. However, upon a closer inspection you will notice that each neighborhood is actually quite different. Unfortunately, the location information provided by Foursquare doesnâ€™t seem to reflect that.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># create columns according to number of top venues
# columns = ['Neighborhood']
</span><span class="n">num_top_venues</span> <span class="o">=</span> <span class="mi">10</span>
<span class="n">indicators</span> <span class="o">=</span> <span class="p">[</span><span class="s">'st'</span><span class="p">,</span> <span class="s">'nd'</span><span class="p">,</span> <span class="s">'rd'</span><span class="p">]</span>
<span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">ind</span> <span class="ow">in</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">num_top_venues</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">columns</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">'{}{} Most Common Venue'</span><span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">ind</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">indicators</span><span class="p">[</span><span class="n">ind</span><span class="p">]))</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="n">columns</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">'{}th Most Common Venue'</span><span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">ind</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
        
<span class="n">top_columns</span> <span class="o">=</span> <span class="n">columns</span><span class="p">;</span>
<span class="n">venues_df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="n">columns</span><span class="p">)</span>
<span class="n">venues_df2</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'Neighborhood_x'</span><span class="p">]</span>


<span class="c1"># get top venues
</span><span class="n">c</span> <span class="o">=</span> <span class="mi">1</span>
<span class="k">for</span> <span class="n">neighborhood</span> <span class="ow">in</span> <span class="n">venues_df2</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]:</span>
    <span class="n">c</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">venues_df2</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">venues_df2</span><span class="p">[</span><span class="s">'Neighborhood'</span><span class="p">]</span> <span class="o">==</span> <span class="n">neighborhood</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span> <span class="mi">1</span><span class="p">:]</span> <span class="o">=</span> <span class="n">return_most_common_venues</span><span class="p">(</span>
        <span class="n">la_venue_onehot_grouped</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">la_venue_onehot_grouped</span><span class="p">[</span><span class="s">'City'</span><span class="p">]</span> <span class="o">==</span>  <span class="n">neighborhood</span><span class="p">)[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="mi">1</span><span class="p">:],</span> 
        <span class="n">num_top_venues</span><span class="p">)</span>

    
<span class="c1"># put in safety ranking, median rent, and population
</span><span class="n">venues_df2</span> <span class="o">=</span> <span class="n">venues_df2</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">neigh_df_cleaned</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'Neighborhood'</span><span class="p">)</span>
<span class="n">venues_df2</span> <span class="o">=</span> <span class="n">venues_df2</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">neigh_rent_df</span><span class="p">[[</span><span class="s">'Neighborhood'</span><span class="p">,</span> <span class="s">'Latitude'</span><span class="p">,</span> <span class="s">'Longitude'</span><span class="p">]],</span> <span class="n">on</span><span class="o">=</span><span class="s">'Neighborhood'</span><span class="p">)</span>
<span class="n">venues_df2</span><span class="p">[</span><span class="s">'Cluster'</span><span class="p">]</span> <span class="o">=</span> <span class="n">kmeans</span><span class="o">.</span><span class="n">labels_</span> <span class="o">+</span> <span class="mi">1</span>

<span class="c1"># print(venues_df2.shape)
# venues_df2.head()
</span>
<span class="n">venues_df2</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'Cluster'</span><span class="p">)[</span><span class="n">top_columns</span><span class="p">[</span><span class="mi">1</span><span class="p">:]]</span><span class="o">.</span><span class="n">agg</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">index</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div></div>

<div style="overflow-x:auto;">
<style scoped="">
    .output_area{
        max-width:200px;
        overflow:scroll;
    }
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>1st Most Common Venue</th>
      <th>2nd Most Common Venue</th>
      <th>3rd Most Common Venue</th>
      <th>4th Most Common Venue</th>
      <th>5th Most Common Venue</th>
      <th>6th Most Common Venue</th>
      <th>7th Most Common Venue</th>
      <th>8th Most Common Venue</th>
      <th>9th Most Common Venue</th>
      <th>10th Most Common Venue</th>
    </tr>
    <tr>
      <th>Cluster</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>Mexican Restaurant</td>
      <td>Fast Food Restaurant</td>
      <td>Pizza Place</td>
      <td>Grocery Store</td>
      <td>Convenience Store</td>
      <td>Coffee Shop</td>
      <td>CafÃ©</td>
      <td>Grocery Store</td>
      <td>Sandwich Place</td>
      <td>Sandwich Place</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Sushi Restaurant</td>
      <td>Pizza Place</td>
      <td>Zoo</td>
      <td>Fair</td>
      <td>Empanada Restaurant</td>
      <td>English Restaurant</td>
      <td>Ethiopian Restaurant</td>
      <td>Event Service</td>
      <td>Event Space</td>
      <td>Exhibit</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Pizza Place</td>
      <td>Fast Food Restaurant</td>
      <td>Park</td>
      <td>Park</td>
      <td>Park</td>
      <td>Ethiopian Restaurant</td>
      <td>Bakery</td>
      <td>Grocery Store</td>
      <td>Grocery Store</td>
      <td>Event Service</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Food</td>
      <td>Zoo</td>
      <td>Farm</td>
      <td>Empanada Restaurant</td>
      <td>English Restaurant</td>
      <td>Ethiopian Restaurant</td>
      <td>Event Service</td>
      <td>Event Space</td>
      <td>Exhibit</td>
      <td>Eye Doctor</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Lake</td>
      <td>Zoo</td>
      <td>Falafel Restaurant</td>
      <td>Empanada Restaurant</td>
      <td>English Restaurant</td>
      <td>Ethiopian Restaurant</td>
      <td>Event Service</td>
      <td>Event Space</td>
      <td>Exhibit</td>
      <td>Eye Doctor</td>
    </tr>
    <tr>
      <th>6</th>
      <td>Coffee Shop</td>
      <td>Convenience Store</td>
      <td>Mexican Restaurant</td>
      <td>Pizza Place</td>
      <td>Coffee Shop</td>
      <td>Mexican Restaurant</td>
      <td>Supermarket</td>
      <td>Movie Theater</td>
      <td>Sandwich Place</td>
      <td>Grocery Store</td>
    </tr>
    <tr>
      <th>7</th>
      <td>Mexican Restaurant</td>
      <td>Fast Food Restaurant</td>
      <td>Mexican Restaurant</td>
      <td>Sandwich Place</td>
      <td>Coffee Shop</td>
      <td>Burger Joint</td>
      <td>Bar</td>
      <td>Chinese Restaurant</td>
      <td>Convenience Store</td>
      <td>Coffee Shop</td>
    </tr>
    <tr>
      <th>8</th>
      <td>Fishing Spot</td>
      <td>American Restaurant</td>
      <td>Zoo</td>
      <td>Farm</td>
      <td>English Restaurant</td>
      <td>Ethiopian Restaurant</td>
      <td>Event Service</td>
      <td>Event Space</td>
      <td>Exhibit</td>
      <td>Eye Doctor</td>
    </tr>
    <tr>
      <th>9</th>
      <td>Coffee Shop</td>
      <td>Fast Food Restaurant</td>
      <td>Coffee Shop</td>
      <td>American Restaurant</td>
      <td>CafÃ©</td>
      <td>English Restaurant</td>
      <td>Ethiopian Restaurant</td>
      <td>Pizza Place</td>
      <td>Event Space</td>
      <td>Event Space</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Ski Chairlift</td>
      <td>Mountain</td>
      <td>Zoo</td>
      <td>Falafel Restaurant</td>
      <td>Empanada Restaurant</td>
      <td>Ethiopian Restaurant</td>
      <td>Ethiopian Restaurant</td>
      <td>Event Service</td>
      <td>Exhibit</td>
      <td>Exhibit</td>
    </tr>
  </tbody>
</table>
</div>

<p><a id="conclusion"></a></p>
<h2 id="6-conclusion">6. Conclusion</h2>
<p>(Where you conclude the report)</p>

<p>After reading this extensive report, I hope you will have a good grasp of the different neighborhoods in LA and have a good idea of where you would want to live if you ever move to LA. Despite LAâ€™s sunshine, palm trees and neverending strip malls, LA is a big, big place that actually offers a wide diversity of neighborhoods and caters to people of all backgrounds and lifestyles. If you are a young professional, I hope this guide can help you decide which neighborhood youâ€™d like to live in!</p>

:ET