I"<p>Previously I introduced <a href="http://bit.ly/pair-app">Pair</a>, an image-based product collection recommender built using <a href="www.streamlit.io">Streamlit</a> and deployed online using <a href="https://cloud.google.com/kubernetes-engine">Google Kubernetes Engine</a>. Recently I also deployed <a href="http://bit.ly/cov19-tracker">COV19 Tracker</a>, an uncluttered dashboard that visualizes the latest COVID-19 case numbers across the world and in the US. In this post I will go through the step-by-step process of how I deployed those applications. Most of the workflow follows this GKE tutorial on <a href="https://cloud.google.com/kubernetes-engine/docs/tutorials/hello-app">deploying a containerized web application</a>.</p>

<h2 id="prerequisites">Prerequisites</h2>
<ol>
  <li>
    <p><strong>Google Cloud SDK:</strong> Before we start, you need to <a href="https://cloud.google.com/sdk/install">install the Cloud software development kit (SDK)</a>, which includes the <code class="highlighter-rouge">gcloud</code> command-line tool that provides the primary command-line interface for Google Cloud.</p>
  </li>
  <li>
    <p><strong>Kubenetes SDK:</strong> After you install <code class="highlighter-rouge">gcloud</code>, you need to install the <code class="highlighter-rouge">kubectl</code> command-line tool, which provides the primary command-line interface for running commands against Kubernetes clusters. <code class="highlighter-rouge">kubectl</code> can be installed via the following command: <code class="highlighter-rouge">gcloud components install kubectl</code>.</p>
  </li>
  <li>
    <p><strong>Docker:</strong> You also need to <a href="https://docs.docker.com/get-docker/">download and install Docker application</a>. If you are new to Docker, here’s a <a href="https://docs.docker.com/get-started/">quickstart guide</a>.</p>
  </li>
</ol>

<p>Once these are installed then you’re ready to start deploying!</p>

<h2 id="workflow">Workflow</h2>
<ol>
  <li>
    <p><strong>Dockerize the app:</strong> You need to first build a Docker image (think of the recipe for a cake) of your application. See here for a <a href="https://docs.docker.com/get-started/part2/">quick tutorial</a>. In short, this involves</p>

    <ol>
      <li>Defining a container with Dockerfile</li>
      <li>Building the Docker image</li>
    </ol>

    <p><strong>Tip:</strong> Even before Dockerizing, create your requirements.txt and try installing all the dependencies in a clean virtual machine to see if you included all the required libraries and packages. If after installation the app runs successfully, then you can be more certain that the Docker image will be error-free. This could save time in the long run because Dockerization takes a few minutes depending on your files and dependencies, so having to re-Dockerize after fixing every dependency error could be time-consuming.</p>
  </li>
  <li>
    <p><strong>Test the container locally:</strong> Test by running the image as a container (think of the cake made from the recipe)</p>
  </li>
</ol>
:ET