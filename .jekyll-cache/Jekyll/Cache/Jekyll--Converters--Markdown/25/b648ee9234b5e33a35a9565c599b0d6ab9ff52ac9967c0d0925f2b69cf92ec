I"Šb<p>The negative impact brought on by the Coronavirus pandemic is finally hitting the tech industry, as major tech companies begin laying off employees in droves in anticipation of the prolonged economic downturn. I want to understand the demographic of those in the tech industry that are impacted by this crsis, so I analyzed the profiles of AirBnB employees from their recently published <a href="https://www.airbnb.com/d/talent">AirBnB talent pool</a>. In the post Iâ€™ll also explain the codes I used to scrape the website for your scraping pleasure.</p>

<!--more-->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">time</span> 
<span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># for scraping javascript rendered webpages
</span><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">from</span> <span class="nn">selenium.webdriver.common.keys</span> <span class="kn">import</span> <span class="n">Keys</span>
<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span> <span class="k">as</span> <span class="n">bs</span>

<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
<span class="n">sns</span><span class="o">.</span><span class="n">set_style</span><span class="p">(</span><span class="s">'whitegrid'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="o">.</span><span class="n">update</span><span class="p">({</span><span class="s">'font.size'</span><span class="p">:</span><span class="mi">18</span><span class="p">})</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">page</span><span class="p">,</span> <span class="n">records</span><span class="p">,</span> <span class="n">results</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="p">[],</span> <span class="bp">True</span>
<span class="c1"># initialize headless Chrome browser
</span><span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Chrome</span><span class="p">(</span><span class="n">executable_path</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">abspath</span><span class="p">(</span><span class="s">''</span><span class="p">)</span><span class="o">+</span><span class="s">'/chromedriver'</span><span class="p">)</span>
<span class="c1"># initialize url
</span><span class="n">base_url</span> <span class="o">=</span> <span class="s">'https://www.airbnb.com/d/talent?function=&amp;location=&amp;uuid=&amp;relocation=&amp;remote=&amp;page='</span>

<span class="k">while</span> <span class="n">results</span><span class="p">:</span>     
    <span class="c1"># get page
</span>    <span class="n">url</span> <span class="o">=</span> <span class="n">base_url</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
    <span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">window</span><span class="p">(</span><span class="n">driver</span><span class="o">.</span><span class="n">window_handles</span><span class="p">[</span><span class="n">page</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
    <span class="n">driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

    <span class="c1"># parse as HTML
</span>    <span class="n">page_html</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">page_source</span>
    <span class="n">bsoup</span> <span class="o">=</span> <span class="n">bs</span><span class="p">(</span><span class="n">page_html</span><span class="p">,</span> <span class="s">'html.parser'</span><span class="p">)</span>
    
    <span class="c1"># find nested tag
</span>    <span class="n">results</span> <span class="o">=</span> <span class="n">bsoup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span> <span class="n">attrs</span><span class="o">=</span><span class="p">{</span><span class="s">'class'</span><span class="p">:</span><span class="s">'_1jgihvq'</span><span class="p">})</span>
    
    <span class="k">if</span> <span class="n">results</span><span class="p">:</span> 
        <span class="c1"># get values 
</span>        <span class="k">for</span> <span class="n">res</span> <span class="ow">in</span> <span class="n">results</span><span class="p">:</span>
            <span class="n">name</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span> <span class="n">attrs</span><span class="o">=</span><span class="p">{</span><span class="s">'class'</span><span class="p">:</span><span class="s">'_1u6gy0cm'</span><span class="p">})</span><span class="o">.</span><span class="n">text</span>
            <span class="n">title</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">dept</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">partition</span><span class="p">(</span><span class="s">'</span><span class="se">\xa0</span><span class="s">'</span><span class="p">)</span> <span class="c1"># job title, department
</span>            <span class="n">location</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">pref</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="n">contents</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">partition</span><span class="p">(</span><span class="s">'</span><span class="se">\xa0</span><span class="s">'</span><span class="p">)</span> <span class="c1"># location, preferences
</span>            <span class="n">remote</span> <span class="o">=</span> <span class="bp">True</span> <span class="k">if</span> <span class="s">'remote'</span> <span class="ow">in</span> <span class="n">pref</span> <span class="k">else</span> <span class="bp">False</span>
            <span class="n">relocation</span> <span class="o">=</span> <span class="bp">True</span> <span class="k">if</span> <span class="s">'relocation'</span> <span class="ow">in</span> <span class="n">pref</span> <span class="k">else</span> <span class="bp">False</span>
            <span class="n">records</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">name</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">dept</span><span class="o">.</span><span class="n">strip</span><span class="p">(</span><span class="s">'()'</span><span class="p">),</span> <span class="n">location</span><span class="p">,</span> <span class="n">remote</span><span class="p">,</span> <span class="n">relocation</span><span class="p">))</span>

    <span class="n">page</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">driver</span><span class="o">.</span><span class="n">execute_script</span><span class="p">(</span><span class="s">"window.open('');"</span><span class="p">)</span>

<span class="n">driver</span><span class="o">.</span><span class="n">quit</span><span class="p">()</span> <span class="c1"># close Chrome window
</span></code></pre></div></div>

<p>Workflow:</p>

<ol>
  <li>
    <p><strong>Get page &amp; parse as HTML:</strong> AirBnBâ€™s talent pool website is rendered by JavaScript (JS) rather than HTML. Normally one can just use <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#">BeautifulSoup</a> (BS) to parse data that readily exists in the websiteâ€™s page source, but content in a JS website are not rendered in the source code, so a JS rendering engine is needed to render the page first before BS can parse it. So first I use <a href="https://selenium-python.readthedocs.io/">selenium</a> â€“ a headless browser (i.e. browser without a GUI) â€“ to render the JS website (with time delays), then parse it as HTML with BeautifulSoup.</p>
  </li>
  <li>
    <p><strong>Find nested tag:</strong> Once the page is read as HTML, then I use BS to inspect the content and find the information I want. This <a href="https://www.youtube.com/watch?v=r_xb0vF1uMc">4-part tutorial</a> from Data School gives a quick and very useful overview on how to do this. In short, I find the nested tag at a level that contains all the information of an individual, then I use BSâ€™s <code class="highlighter-rouge">find_all</code> method to select the personâ€™s information.</p>
  </li>
  <li>
    <p><strong>Get values:</strong> Once I have each personâ€™s profile, I use specific attributes to parse the features (e.g. name, localtion, etc) I want and store them as a list of tuples.</p>
  </li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># make dataframe
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">records</span><span class="p">,</span> 
                  <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'name'</span><span class="p">,</span> <span class="s">'title'</span><span class="p">,</span> <span class="s">'dept'</span><span class="p">,</span> 
                           <span class="s">'location'</span><span class="p">,</span> <span class="s">'remote'</span><span class="p">,</span> <span class="s">'relocation'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">f</span><span class="s">"Total profiles: {df.shape[0]}"</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Total profiles: 751
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: left;">
      <th></th>
      <th>name</th>
      <th>title</th>
      <th>dept</th>
      <th>location</th>
      <th>remote</th>
      <th>relocation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Long Bai</td>
      <td>Performance Marketing Specialist</td>
      <td>Marketing</td>
      <td>Beijing</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Alejandro Ozerkovsky</td>
      <td>Product Manager, Design Language System</td>
      <td>Product Management</td>
      <td>San Francisco</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Sarah (Goodie) Goodnow</td>
      <td>Global Marketing Lead</td>
      <td>Marketing</td>
      <td>San Francisco</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Ray Fu</td>
      <td>Creative Producer</td>
      <td>Production</td>
      <td>Shanghai</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Noor Loic Bin Satar</td>
      <td>Pilot Perfect Scale Specialist</td>
      <td>Other</td>
      <td>Singapore</td>
      <td>False</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">_</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
<span class="n">dept</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">dept</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
               <span class="o">.</span><span class="n">to_frame</span><span class="p">()</span>
               <span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">/</span><span class="n">x</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>
               <span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
               <span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s">'dept'</span><span class="p">:</span><span class="s">'pct'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">:</span><span class="s">'name'</span><span class="p">}))</span>
<span class="n">g</span> <span class="o">=</span> <span class="n">sns</span><span class="o">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="n">dept</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="n">dept</span><span class="o">.</span><span class="n">pct</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">'h'</span><span class="p">,</span> <span class="n">palette</span><span class="o">=</span><span class="s">'rainbow'</span><span class="p">);</span>
<span class="n">g</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="n">xlabel</span><span class="o">=</span><span class="s">'Percent of total (</span><span class="si">%</span><span class="s">)'</span><span class="p">,</span> <span class="n">ylabel</span><span class="o">=</span><span class="s">'Department'</span><span class="p">,</span>
      <span class="n">title</span><span class="o">=</span><span class="s">'AirBnB layoffs by department'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="/static/imgs/20200510a.png" alt="png" /></p>

<p><strong>Note:</strong> This is not an indicator of how dispensible one department is compare to another, since we donâ€™t know how many total employees are in each department. It could very well be that customer service, engineering, design, sales and recruiting comprise the majority of the companyâ€™s workforce, so thatâ€™s why there is a high percentage of people in those departments being laid off.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">_</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
<span class="n">location</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">location</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
               <span class="o">.</span><span class="n">to_frame</span><span class="p">()</span>
               <span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">/</span><span class="n">x</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>
               <span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
               <span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s">'location'</span><span class="p">:</span><span class="s">'pct'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">:</span><span class="s">'city'</span><span class="p">}))</span>
<span class="n">g</span> <span class="o">=</span> <span class="n">sns</span><span class="o">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="n">location</span><span class="o">.</span><span class="n">city</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="n">location</span><span class="o">.</span><span class="n">pct</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="s">'h'</span><span class="p">,</span> <span class="n">palette</span><span class="o">=</span><span class="s">'rainbow'</span><span class="p">);</span>
<span class="n">g</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="n">xlabel</span><span class="o">=</span><span class="s">'Percent of total (</span><span class="si">%</span><span class="s">)'</span><span class="p">,</span> <span class="n">ylabel</span><span class="o">=</span><span class="s">'City'</span><span class="p">,</span>
      <span class="n">title</span><span class="o">=</span><span class="s">'AirBnB layoffs by city'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="/static/imgs/20200510b.png" alt="png" /></p>

<p>Around 50% of the total layoffs are from SF, which makes sense considering it is the AirBnB headquarter. More surprising are Montreal and Portland, which I guess probably have a large AirBnB campus.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># df.assign(pct = lambda x: x./x.sum()*100)
</span><span class="n">_</span><span class="p">,</span> <span class="n">axs</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="n">g1</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">remote</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">/</span><span class="n">x</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'barh'</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">axs</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
<span class="n">g2</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">relocation</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">/</span><span class="n">x</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">'barh'</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">axs</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
<span class="n">g1</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="n">xlabel</span><span class="o">=</span><span class="s">'Percent of total (</span><span class="si">%</span><span class="s">)'</span><span class="p">,</span>
       <span class="n">ylabel</span><span class="o">=</span><span class="s">'Remote OK?'</span><span class="p">,</span>
       <span class="n">title</span><span class="o">=</span><span class="s">'Will to work remote'</span><span class="p">)</span>
<span class="n">g2</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="n">xlabel</span><span class="o">=</span><span class="s">'Percent of total (</span><span class="si">%</span><span class="s">)'</span><span class="p">,</span>
       <span class="n">ylabel</span><span class="o">=</span><span class="s">'Relocation OK?'</span><span class="p">,</span>
       <span class="n">title</span><span class="o">=</span><span class="s">'Willing to relocate'</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="/static/imgs/20200510c.png" alt="png" /></p>

<p>Almost 80% are fine with remote work, but only around 45% are fine with relocation. Seems like tech workers are more than ready for a normalized remote work culture, but do tech companies feel the same way? It seems that major tech companies are ready for such <a href="https://www.theverge.com/2020/5/8/21252240/google-employees-essential-staff-remote-work-from-home-2021">changes</a>.</p>

<h2 id="conclusion">Conclusion</h2>

<p>This was part of my Funemployment <a href="https://en.wikipedia.org/wiki/20%25_Project">20% Project</a> series to learn how to scrape data from dynamic JS-rendered websites, and also to learn about the ongoing layoffs at major tech companies. In the future Iâ€™ll do more of these when I come across other new and interesting datasets.</p>

<hr />

<h2 id="references">References</h2>
<ul>
  <li><a href="https://sadesmith.com/2018/06/15/blog/scraping-client-side-rendered-data-with-python-and-selenium">Scraping Client Side Rendered Data with Python and Selenium</a> (blog)</li>
  <li><a href="https://stackoverflow.com/a/26440563/2643353">Web-scraping JavaScript page with Python</a> (Stackoverflow)</li>
  <li><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#searching-the-tree">Beautiful Soup documentation</a> (doc)</li>
  <li><a href="https://medium.com/@pavel.tashev/python-and-selenium-open-focus-and-close-a-new-tab-4cc606b73388">Python and Selenium â€” Open, focus and close a new Tab</a> (Medium)</li>
</ul>
:ET